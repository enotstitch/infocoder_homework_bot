require('dotenv').config();
const { Bot } = require('grammy');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –æ—Ç BotFather
const bot = new Bot(process.env.BOT_API_KEY);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.command('start', async (ctx) => {
  await ctx.reply('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π ü§ñ');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
function isCommand(message) {
  return (
    message.entities &&
    message.entities.some((entity) => entity.type === 'bot_command')
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (ctx) => {
  if (!isCommand(ctx.message)) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—å
      const caption = ctx.message.caption || '';
      const text = ctx.message.text;

      const firstName = ctx.update.message.from.first_name;
      const lastName = ctx.update.message.from.last_name || '–ú—É—Ä–∞–≤–∫–∏–Ω';
      const link = ctx.update.message.from.username;

      const message = `<b><a href='https://t.me/${link}'>${firstName} ${lastName}</a></b>\n\n`;

      // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞
      if (text) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.api.sendMessage(process.env.targetGroupId, message + text, {
          parse_mode: 'HTML',
        });
      } else if (ctx.message.photo) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å

        await ctx.api.sendPhoto(
          process.env.targetGroupId,
          ctx.message.photo[ctx.message.photo.length - 1].file_id,
          { caption: message + caption, parse_mode: 'HTML' }
        );
      } else if (ctx.message.document) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–ø–∏—Å—å—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        await ctx.api.sendDocument(
          process.env.targetGroupId,
          ctx.message.document.file_id,
          {
            caption: message + caption,
            parse_mode: 'HTML',
          }
        );
      } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ forwardMessage
        await ctx.forwardMessage(process.env.targetGroupId);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply('–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø–ø—É.');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
    }
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.start();
